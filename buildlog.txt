# Bake Begins!
### (1 of 6) Copy sources
$ cp -a /home/travis/build/fontdirectory/quantico/METADATA.json /home/travis/build/fontdirectory/quantico/builds/build
$ cp -a /home/travis/build/fontdirectory/quantico/DESCRIPTION.en_us.html /home/travis/build/fontdirectory/quantico/builds/build
$ cp -a /home/travis/build/fontdirectory/quantico/FONTLOG.txt /home/travis/build/fontdirectory/quantico/builds/build
$ cp -a Quantico-Regular.ttf.ttx Quantico-BoldItalic.ttf.ttx Quantico-Italic.ttf.ttx Quantico-Bold.ttf.ttx src/Quantico-Bold.otf.ttx src/Quantico-Italic.otf.ttx src/Quantico-BoldItalic.otf.ttx src/Quantico-Regular.otf.ttx src/Quantico-Italic-TTF.sfd src/Quantico-Bold-TTF.sfd src/Quantico-BoldItalic-TTF.sfd src/Quantico-Regular-TTF.sfd Quantico-Regular.ttf.G_P_O_S_.ttx Quantico-Regular.ttf._l_o_c_a.ttx Quantico-Regular.ttf.O_S_2f_2.ttx Quantico-Regular.ttf.D_S_I_G_.ttx Quantico-Regular.ttf.F_F_T_M_.ttx Quantico-Regular.ttf._p_o_s_t.ttx Quantico-Regular.ttf._h_e_a_d.ttx Quantico-Regular.ttf._h_m_t_x.ttx Quantico-Regular.ttf.G_S_U_B_.ttx Quantico-Regular.ttf._m_a_x_p.ttx Quantico-Regular.ttf._g_l_y_f.ttx Quantico-Regular.ttf.G_D_E_F_.ttx Quantico-Regular.ttf.GlyphOrder.ttx Quantico-Regular.ttf._p_r_e_p.ttx Quantico-Regular.ttf._n_a_m_e.ttx Quantico-Regular.ttf._c_m_a_p.ttx Quantico-Regular.ttf._g_a_s_p.ttx Quantico-Regular.ttf._h_h_e_a.ttx Quantico-BoldItalic.ttf.GlyphOrder.ttx Quantico-BoldItalic.ttf._g_a_s_p.ttx Quantico-BoldItalic.ttf._l_o_c_a.ttx Quantico-BoldItalic.ttf.O_S_2f_2.ttx Quantico-BoldItalic.ttf.D_S_I_G_.ttx Quantico-BoldItalic.ttf.F_F_T_M_.ttx Quantico-BoldItalic.ttf._n_a_m_e.ttx Quantico-BoldItalic.ttf._p_o_s_t.ttx Quantico-BoldItalic.ttf.G_D_E_F_.ttx Quantico-BoldItalic.ttf._m_a_x_p.ttx Quantico-BoldItalic.ttf._h_m_t_x.ttx Quantico-BoldItalic.ttf._g_l_y_f.ttx Quantico-BoldItalic.ttf._h_h_e_a.ttx Quantico-BoldItalic.ttf._h_e_a_d.ttx Quantico-BoldItalic.ttf.G_P_O_S_.ttx Quantico-BoldItalic.ttf._c_m_a_p.ttx Quantico-BoldItalic.ttf.G_S_U_B_.ttx Quantico-Italic.ttf.GlyphOrder.ttx Quantico-Italic.ttf._h_h_e_a.ttx Quantico-Italic.ttf._h_m_t_x.ttx Quantico-Italic.ttf.O_S_2f_2.ttx Quantico-Italic.ttf._c_m_a_p.ttx Quantico-Italic.ttf.G_P_O_S_.ttx Quantico-Italic.ttf.F_F_T_M_.ttx Quantico-Italic.ttf._l_o_c_a.ttx Quantico-Italic.ttf._g_a_s_p.ttx Quantico-Italic.ttf._p_o_s_t.ttx Quantico-Italic.ttf.D_S_I_G_.ttx Quantico-Italic.ttf._g_l_y_f.ttx Quantico-Italic.ttf._m_a_x_p.ttx Quantico-Italic.ttf._h_e_a_d.ttx Quantico-Italic.ttf.G_S_U_B_.ttx Quantico-Italic.ttf._n_a_m_e.ttx Quantico-Italic.ttf.G_D_E_F_.ttx Quantico-Bold.ttf._p_o_s_t.ttx Quantico-Bold.ttf.D_S_I_G_.ttx Quantico-Bold.ttf._h_e_a_d.ttx Quantico-Bold.ttf._g_a_s_p.ttx Quantico-Bold.ttf._c_m_a_p.ttx Quantico-Bold.ttf._g_l_y_f.ttx Quantico-Bold.ttf.G_D_E_F_.ttx Quantico-Bold.ttf._h_h_e_a.ttx Quantico-Bold.ttf._h_m_t_x.ttx Quantico-Bold.ttf.F_F_T_M_.ttx Quantico-Bold.ttf.G_P_O_S_.ttx Quantico-Bold.ttf.O_S_2f_2.ttx Quantico-Bold.ttf._l_o_c_a.ttx Quantico-Bold.ttf.GlyphOrder.ttx Quantico-Bold.ttf._m_a_x_p.ttx Quantico-Bold.ttf._n_a_m_e.ttx Quantico-Bold.ttf.G_S_U_B_.ttx src/Quantico-Bold.otf._h_e_a_d.ttx src/Quantico-Bold.otf._h_m_t_x.ttx src/Quantico-Bold.otf._m_a_x_p.ttx src/Quantico-Bold.otf._h_h_e_a.ttx src/Quantico-Bold.otf.GlyphOrder.ttx src/Quantico-Bold.otf._c_m_a_p.ttx src/Quantico-Bold.otf.C_F_F_.ttx src/Quantico-Bold.otf._p_o_s_t.ttx src/Quantico-Bold.otf._k_e_r_n.ttx src/Quantico-Bold.otf._n_a_m_e.ttx src/Quantico-Bold.otf.O_S_2f_2.ttx src/Quantico-Italic.otf.GlyphOrder.ttx src/Quantico-Italic.otf.C_F_F_.ttx src/Quantico-Italic.otf._h_m_t_x.ttx src/Quantico-Italic.otf._h_h_e_a.ttx src/Quantico-Italic.otf._m_a_x_p.ttx src/Quantico-Italic.otf._h_e_a_d.ttx src/Quantico-Italic.otf._k_e_r_n.ttx src/Quantico-Italic.otf._c_m_a_p.ttx src/Quantico-Italic.otf._p_o_s_t.ttx src/Quantico-Italic.otf.O_S_2f_2.ttx src/Quantico-Italic.otf._n_a_m_e.ttx src/Quantico-BoldItalic.otf._n_a_m_e.ttx src/Quantico-BoldItalic.otf._h_e_a_d.ttx src/Quantico-BoldItalic.otf._m_a_x_p.ttx src/Quantico-BoldItalic.otf.C_F_F_.ttx src/Quantico-BoldItalic.otf.GlyphOrder.ttx src/Quantico-BoldItalic.otf._k_e_r_n.ttx src/Quantico-BoldItalic.otf._h_h_e_a.ttx src/Quantico-BoldItalic.otf._p_o_s_t.ttx src/Quantico-BoldItalic.otf._c_m_a_p.ttx src/Quantico-BoldItalic.otf._h_m_t_x.ttx src/Quantico-BoldItalic.otf.O_S_2f_2.ttx src/Quantico-Regular.otf._h_h_e_a.ttx src/Quantico-Regular.otf._p_o_s_t.ttx src/Quantico-Regular.otf._h_e_a_d.ttx src/Quantico-Regular.otf._c_m_a_p.ttx src/Quantico-Regular.otf._k_e_r_n.ttx src/Quantico-Regular.otf.O_S_2f_2.ttx src/Quantico-Regular.otf.C_F_F_.ttx src/Quantico-Regular.otf._h_m_t_x.ttx src/Quantico-Regular.otf.GlyphOrder.ttx src/Quantico-Regular.otf._n_a_m_e.ttx src/Quantico-Regular.otf._m_a_x_p.ttx /home/travis/build/fontdirectory/quantico/builds/build/sources
### (2 of 6) pyfontaine
### (3 of 6) Run upstream tests
$ fontbakery-check.py upstream-repo sources
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_bakery_yaml_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_copyright_notices_same_across_family(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_description_html_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_fontlog_txt_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_metadata_json_exists(): OK
$ fontaine --collections subsets --text /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Bold.otf.ttx /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Italic.otf.ttx /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Regular.ttf.ttx /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-BoldItalic.ttf.ttx /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-BoldItalic.otf.ttx /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Italic.ttf.ttx /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Bold.ttf.ttx /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Regular.otf.ttx /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Italic-TTF.sfd /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Bold-TTF.sfd /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-BoldItalic-TTF.sfd /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Regular-TTF.sfd > fontaine.txt
WARNING: Please install [PyICU](https://pypi.python.org/pypi/PyICU) toenable [feature], perhaps with: pip install pyicu
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_contours(): OK
pyfontaine error: Not a TrueType or OpenType font (bad sfntVersion)
pyfontaine process has been failed
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_points(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_test_prepolation_glyph_names(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_component(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_mark_to_mark(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_own_glyphs(): OK
$ fontbakery-check.py upstream-ttx Quantico-Bold.otf.ttx
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Bold.otf.ttx /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Bold.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
$ fontbakery-check.py upstream-ttx Quantico-Italic.otf.ttx
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Italic.otf.ttx /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Italic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
$ fontbakery-check.py upstream-ttx Quantico-Regular.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Regular.ttf.ttx /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
$ fontbakery-check.py upstream-ttx Quantico-BoldItalic.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-BoldItalic.ttf.ttx /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-BoldItalic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
$ fontbakery-check.py upstream-ttx Quantico-BoldItalic.otf.ttx
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-BoldItalic.otf.ttx /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-BoldItalic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
$ fontbakery-check.py upstream-ttx Quantico-Italic.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Italic.ttf.ttx /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Italic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
$ fontbakery-check.py upstream-ttx Quantico-Bold.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Bold.ttf.ttx /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Bold.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
$ fontbakery-check.py upstream-ttx Quantico-Regular.otf.ttx
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Regular.otf.ttx /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
$ fontbakery-check.py upstream Quantico-Italic-TTF.sfd
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_has_rupee(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A_a_glyph_instance(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_ended_ufo(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_folder(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_fsType_eq_1(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_it_exists(): ERROR
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): ERROR
bakery_lint.tests.upstream.test_unicode_value_should_appear_only_once_per_font.UnicodeValueShouldAppearOnlyOnce.testUnicodeValue(): ERROR
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_familyname_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_fullfontname_less_than_64_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_consistof_allowed_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_less_than_30_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_stylename_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_weight_value_range_between_250_and_900(): OK
bakery_lint.tests.upstream.test_contour_count.TestContourCount.test_contour_count(): ERROR
$ fontbakery-check.py upstream Quantico-Bold-TTF.sfd
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_has_rupee(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A_a_glyph_instance(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_ended_ufo(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_folder(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_fsType_eq_1(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_it_exists(): ERROR
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): ERROR
bakery_lint.tests.upstream.test_unicode_value_should_appear_only_once_per_font.UnicodeValueShouldAppearOnlyOnce.testUnicodeValue(): ERROR
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_familyname_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_fullfontname_less_than_64_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_consistof_allowed_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_less_than_30_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_stylename_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_weight_value_range_between_250_and_900(): OK
bakery_lint.tests.upstream.test_contour_count.TestContourCount.test_contour_count(): ERROR
$ fontbakery-check.py upstream Quantico-BoldItalic-TTF.sfd
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_has_rupee(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A_a_glyph_instance(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_ended_ufo(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_folder(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_fsType_eq_1(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_it_exists(): ERROR
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): ERROR
bakery_lint.tests.upstream.test_unicode_value_should_appear_only_once_per_font.UnicodeValueShouldAppearOnlyOnce.testUnicodeValue(): ERROR
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_familyname_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_fullfontname_less_than_64_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_consistof_allowed_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_less_than_30_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_stylename_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_weight_value_range_between_250_and_900(): OK
bakery_lint.tests.upstream.test_contour_count.TestContourCount.test_contour_count(): ERROR
$ fontbakery-check.py upstream Quantico-Regular-TTF.sfd
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_has_rupee(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A_a_glyph_instance(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_ended_ufo(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_folder(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_fsType_eq_1(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_it_exists(): ERROR
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): ERROR
bakery_lint.tests.upstream.test_unicode_value_should_appear_only_once_per_font.UnicodeValueShouldAppearOnlyOnce.testUnicodeValue(): ERROR
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_familyname_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_fullfontname_less_than_64_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_consistof_allowed_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_less_than_30_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_stylename_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_weight_value_range_between_250_and_900(): OK
bakery_lint.tests.upstream.test_contour_count.TestContourCount.test_contour_count(): ERROR
### (4 of 6) Convert sources to TTF
$ ttx -d /home/travis/build/fontdirectory/quantico/builds/build /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Bold.ttx /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Italic.ttx /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Regular.ttx /home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-BoldItalic.ttx
strippedname:/home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Italic-TTF.sfd
strippedname:/home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Bold-TTF.sfd
strippedname:/home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-BoldItalic-TTF.sfd
strippedname:/home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Regular-TTF.sfd
Compiling "/home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Bold.ttx" to "/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'DSIG' table...
Compiling "/home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Italic.ttx" to "/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'DSIG' table...
Compiling "/home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-Regular.ttx" to "/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.otf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'name' table...
Parsing 'cmap' table...
Parsing 'post' table...
Parsing 'CFF ' table...
Parsing 'hmtx' table...
Parsing 'kern' table...
Compiling "/home/travis/build/fontdirectory/quantico/builds/build/sources/Quantico-BoldItalic.ttx" to "/home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.otf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'name' table...
Parsing 'cmap' table...
Parsing 'post' table...
Parsing 'CFF ' table...
Parsing 'hmtx' table...
Parsing 'kern' table...
### Test Quantico-Bold.ttf
$ fontbakery-check.py result Quantico-Bold.ttf
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named dotlessj is mapped to U+F6BE.
But its name indicates it should be mapped to U+0237.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
### Optimize TTF Quantico-Bold.ttf
$ ls -l 'Quantico-Bold.ttf'* # look at the size savings of that subset process
Quantico-Bold.ttf.opt: 19260 bytes
Quantico-Bold.ttf: 21076 bytes
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf.opt /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf
### Autohint TTFs (ttfautohint) Quantico-Bold.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf '/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf: 19260 bytes
/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.autohint.ttf: 38628 bytes
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.autohint.ttf /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf
### Subset TTFs (pyftsubset) Quantico-Bold.ttf
$ pyftsubset Quantico-Bold.latin
$ pyftsubset Quantico-Bold.menu
strippedname:/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold.ttf
### Test Quantico-Italic.ttf
$ fontbakery-check.py result Quantico-Italic.ttf
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named dotlessj is mapped to U+F6BE.
But its name indicates it should be mapped to U+0237.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
### Optimize TTF Quantico-Italic.ttf
$ ls -l 'Quantico-Italic.ttf'* # look at the size savings of that subset process
Quantico-Italic.ttf.opt: 20496 bytes
Quantico-Italic.ttf: 22320 bytes
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf.opt /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf
### Autohint TTFs (ttfautohint) Quantico-Italic.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf '/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf: 20496 bytes
/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.autohint.ttf: 39228 bytes
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.autohint.ttf /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf
### Subset TTFs (pyftsubset) Quantico-Italic.ttf
$ pyftsubset Quantico-Italic.latin
$ pyftsubset Quantico-Italic.menu
strippedname:/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic.ttf
$ fontbakery-build-font2ttf.py sources/Quantico-Regular.otf Quantico-Regular.ttf
Warning: Mac string is a subset of the Windows string in the 'name' table
 for the Fullname string in the English (US) language.
Itilde's SEAC-like endchar operator is depreciated for Type2
Jcircumflex's SEAC-like endchar operator is depreciated for Type2
Nacute's SEAC-like endchar operator is depreciated for Type2
Racute's SEAC-like endchar operator is depreciated for Type2
Rcaron's SEAC-like endchar operator is depreciated for Type2
The glyph named dotlessj is mapped to U+F6BE.
But its name indicates it should be mapped to U+0237.
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf)
strippedname:/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.otf
### Test Quantico-Regular.ttf
$ fontbakery-check.py result Quantico-Regular.ttf
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named dotlessj is mapped to U+F6BE.
But its name indicates it should be mapped to U+0237.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
### Optimize TTF Quantico-Regular.ttf
$ ls -l 'Quantico-Regular.ttf'* # look at the size savings of that subset process
Quantico-Regular.ttf.opt: 19404 bytes
Quantico-Regular.ttf: 21496 bytes
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf.opt /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf
### Autohint TTFs (ttfautohint) Quantico-Regular.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf '/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf: 19404 bytes
/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.autohint.ttf: 38324 bytes
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.autohint.ttf /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf
### Subset TTFs (pyftsubset) Quantico-Regular.ttf
$ pyftsubset Quantico-Regular.latin
$ pyftsubset Quantico-Regular.menu
strippedname:/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular.ttf
$ fontbakery-build-font2ttf.py sources/Quantico-BoldItalic.otf Quantico-BoldItalic.ttf
Warning: Mac and Windows entries in the 'name' table differ for the
 Fullname string in the language English (US)
 Mac String: Quantico Bold Italic
Windows String: Quantico-BoldItalic
Agrave's SEAC-like endchar operator is depreciated for Type2
Acircumflex's SEAC-like endchar operator is depreciated for Type2
Adieresis's SEAC-like endchar operator is depreciated for Type2
Egrave's SEAC-like endchar operator is depreciated for Type2
Ecircumflex's SEAC-like endchar operator is depreciated for Type2
Igrave's SEAC-like endchar operator is depreciated for Type2
Icircumflex's SEAC-like endchar operator is depreciated for Type2
Ntilde's SEAC-like endchar operator is depreciated for Type2
Ograve's SEAC-like endchar operator is depreciated for Type2
Ocircumflex's SEAC-like endchar operator is depreciated for Type2
Odieresis's SEAC-like endchar operator is depreciated for Type2
Ugrave's SEAC-like endchar operator is depreciated for Type2
Ucircumflex's SEAC-like endchar operator is depreciated for Type2
Yacute's SEAC-like endchar operator is depreciated for Type2
agrave's SEAC-like endchar operator is depreciated for Type2
acircumflex's SEAC-like endchar operator is depreciated for Type2
adieresis's SEAC-like endchar operator is depreciated for Type2
egrave's SEAC-like endchar operator is depreciated for Type2
ecircumflex's SEAC-like endchar operator is depreciated for Type2
igrave's SEAC-like endchar operator is depreciated for Type2
icircumflex's SEAC-like endchar operator is depreciated for Type2
ntilde's SEAC-like endchar operator is depreciated for Type2
ograve's SEAC-like endchar operator is depreciated for Type2
ocircumflex's SEAC-like endchar operator is depreciated for Type2
odieresis's SEAC-like endchar operator is depreciated for Type2
ugrave's SEAC-like endchar operator is depreciated for Type2
ucircumflex's SEAC-like endchar operator is depreciated for Type2
yacute's SEAC-like endchar operator is depreciated for Type2
Itilde's SEAC-like endchar operator is depreciated for Type2
Jcircumflex's SEAC-like endchar operator is depreciated for Type2
Nacute's SEAC-like endchar operator is depreciated for Type2
Racute's SEAC-like endchar operator is depreciated for Type2
Rcaron's SEAC-like endchar operator is depreciated for Type2
Scaron's SEAC-like endchar operator is depreciated for Type2
Ydieresis's SEAC-like endchar operator is depreciated for Type2
Zcaron's SEAC-like endchar operator is depreciated for Type2
The glyph named dotlessj is mapped to U+F6BE.
But its name indicates it should be mapped to U+0237.
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf)
strippedname:/home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.otf
### Test Quantico-BoldItalic.ttf
$ fontbakery-check.py result Quantico-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named dotlessj is mapped to U+F6BE.
But its name indicates it should be mapped to U+0237.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
### Optimize TTF Quantico-BoldItalic.ttf
$ ls -l 'Quantico-BoldItalic.ttf'* # look at the size savings of that subset process
Quantico-BoldItalic.ttf.opt: 19060 bytes
Quantico-BoldItalic.ttf: 21152 bytes
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf.opt /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf
### Autohint TTFs (ttfautohint) Quantico-BoldItalic.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf '/home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf: 19060 bytes
/home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.autohint.ttf: 35508 bytes
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.autohint.ttf /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf
### Subset TTFs (pyftsubset) Quantico-BoldItalic.ttf
$ pyftsubset Quantico-BoldItalic.latin
$ pyftsubset Quantico-BoldItalic.menu
strippedname:/home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic.ttf
$ fontbakery-build-font2ttf.py sources/Quantico-Italic-TTF.sfd Quantico-Italic-TTF.ttf
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf)
### Test Quantico-Italic-TTF.ttf
$ fontbakery-check.py result Quantico-Italic-TTF.ttf
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named dotlessj is mapped to U+F6BE.
But its name indicates it should be mapped to U+0237.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
### Optimize TTF Quantico-Italic-TTF.ttf
$ ls -l 'Quantico-Italic-TTF.ttf'* # look at the size savings of that subset process
Quantico-Italic-TTF.ttf.opt: 20568 bytes
Quantico-Italic-TTF.ttf: 22656 bytes
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf.opt /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf
### Autohint TTFs (ttfautohint) Quantico-Italic-TTF.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf '/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf: 20568 bytes
/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.autohint.ttf: 39384 bytes
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.autohint.ttf /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf
### Subset TTFs (pyftsubset) Quantico-Italic-TTF.ttf
$ pyftsubset Quantico-Italic-TTF.latin
$ pyftsubset Quantico-Italic-TTF.menu
strippedname:/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Italic-TTF.ttf
$ fontbakery-build-font2ttf.py sources/Quantico-Bold-TTF.sfd Quantico-Bold-TTF.ttf
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf)
### Test Quantico-Bold-TTF.ttf
$ fontbakery-check.py result Quantico-Bold-TTF.ttf
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named dotlessj is mapped to U+F6BE.
But its name indicates it should be mapped to U+0237.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
### Optimize TTF Quantico-Bold-TTF.ttf
$ ls -l 'Quantico-Bold-TTF.ttf'* # look at the size savings of that subset process
Quantico-Bold-TTF.ttf.opt: 19380 bytes
Quantico-Bold-TTF.ttf: 21424 bytes
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf.opt /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf
### Autohint TTFs (ttfautohint) Quantico-Bold-TTF.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf '/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf: 19380 bytes
/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.autohint.ttf: 39040 bytes
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.autohint.ttf /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf
### Subset TTFs (pyftsubset) Quantico-Bold-TTF.ttf
$ pyftsubset Quantico-Bold-TTF.latin
$ pyftsubset Quantico-Bold-TTF.menu
strippedname:/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Bold-TTF.ttf
$ fontbakery-build-font2ttf.py sources/Quantico-BoldItalic-TTF.sfd Quantico-BoldItalic-TTF.ttf
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf)
### Test Quantico-BoldItalic-TTF.ttf
$ fontbakery-check.py result Quantico-BoldItalic-TTF.ttf
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named dotlessj is mapped to U+F6BE.
But its name indicates it should be mapped to U+0237.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
### Optimize TTF Quantico-BoldItalic-TTF.ttf
$ ls -l 'Quantico-BoldItalic-TTF.ttf'* # look at the size savings of that subset process
Quantico-BoldItalic-TTF.ttf.opt: 19056 bytes
Quantico-BoldItalic-TTF.ttf: 21148 bytes
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf.opt /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf
### Autohint TTFs (ttfautohint) Quantico-BoldItalic-TTF.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf '/home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf: 19056 bytes
/home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.autohint.ttf: 35504 bytes
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.autohint.ttf /home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf
### Subset TTFs (pyftsubset) Quantico-BoldItalic-TTF.ttf
$ pyftsubset Quantico-BoldItalic-TTF.latin
$ pyftsubset Quantico-BoldItalic-TTF.menu
strippedname:/home/travis/build/fontdirectory/quantico/builds/build/Quantico-BoldItalic-TTF.ttf
$ fontbakery-build-font2ttf.py sources/Quantico-Regular-TTF.sfd Quantico-Regular-TTF.ttf
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.ttf)
### Test Quantico-Regular-TTF.ttf
$ fontbakery-check.py result Quantico-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named dotlessj is mapped to U+F6BE.
But its name indicates it should be mapped to U+0237.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
### Optimize TTF Quantico-Regular-TTF.ttf
$ ls -l 'Quantico-Regular-TTF.ttf'* # look at the size savings of that subset process
Quantico-Regular-TTF.ttf.opt: 19428 bytes
Quantico-Regular-TTF.ttf: 21492 bytes
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.ttf.opt /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.ttf
### Autohint TTFs (ttfautohint) Quantico-Regular-TTF.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.ttf '/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.ttf: 19428 bytes
/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.autohint.ttf: 38292 bytes
$ mv /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.autohint.ttf /home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.ttf
### Subset TTFs (pyftsubset) Quantico-Regular-TTF.ttf
$ pyftsubset Quantico-Regular-TTF.latin
$ pyftsubset Quantico-Regular-TTF.menu
strippedname:/home/travis/build/fontdirectory/quantico/builds/build/Quantico-Regular-TTF.ttf
### (5 of 6) Generate METADATA.json (fontbakery-build-metadata.py)
$ fontbakery-build-metadata.py /home/travis/build/fontdirectory/quantico/builds/build
{} exists
Designer's name from font is: Matt Desmond
Original size: 38324\nGzip size: 19160
Family Name: Quantico
PS Name: Quantico-BoldItalic
Full Name: Quantico-BoldItalic
Style: italic
Weight: 700
Filename: Quantico-BoldItalic-TTF.ttf
Copyright: Copyright (c) 2011 Matthew Desmond (http://www.madtype.com | mattdesmond@gmail.com), with Reserved Font Name "Quantico"
Family Name: Quantico
PS Name: Quantico-BoldItalic
Full Name: Quantico-BoldItalic
Style: italic
Weight: 700
Filename: Quantico-BoldItalic.ttf
Copyright: Copyright (c) 2011 Matthew Desmond (http://www.madtype.com | mattdesmond@gmail.com), with Reserved Font Name "Quantico"
Family Name: Quantico
PS Name: Quantico-Regular
Full Name: Quantico
Style: normal
Weight: 400
Filename: Quantico-Regular-TTF.ttf
Copyright: Copyright (c) 2011 Matthew Desmond (http://www.madtype.com | mattdesmond@gmail.com), with Reserved Font Name "Quantico"
Family Name: Quantico
PS Name: Quantico-Bold
Full Name: Quantico-Bold
Style: normal
Weight: 700
Filename: Quantico-Bold.ttf
Copyright: Copyright (c) 2011 Matthew Desmond (http://www.madtype.com | mattdesmond@gmail.com), with Reserved Font Name "Quantico"
Family Name: Quantico
PS Name: Quantico-Italic
Full Name: Quantico-Italic
Style: italic
Weight: 400
Filename: Quantico-Italic-TTF.ttf
Copyright: Copyright (c) 2011 Matthew Desmond (http://www.madtype.com | mattdesmond@gmail.com), with Reserved Font Name "Quantico"
Family Name: Quantico
PS Name: Quantico-Bold
Full Name: Quantico-Bold
Style: normal
Weight: 700
Filename: Quantico-Bold-TTF.ttf
Copyright: Copyright (c) 2011 Matthew Desmond (http://www.madtype.com | mattdesmond@gmail.com), with Reserved Font Name "Quantico"
Family Name: Quantico
PS Name: Quantico-Italic
Full Name: Quantico-Italic
Style: italic
Weight: 400
Filename: Quantico-Italic.ttf
Copyright: Copyright (c) 2011 Matthew Desmond (http://www.madtype.com | mattdesmond@gmail.com), with Reserved Font Name "Quantico"
Family Name: Quantico
PS Name: Quantico-Regular
Full Name: Quantico-Regular
Style: normal
Weight: 400
Filename: Quantico-Regular.ttf
Copyright: Copyright (c) 2011 Matthew Desmond (http://www.madtype.com | mattdesmond@gmail.com), with Reserved Font Name "Quantico"
### (6 of 6) Run tests for METADATA.json
$ fontbakery-check.py metadata METADATA.json
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin(): OK
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin_ext(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_menu(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_more_than_500b(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_valid_html(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_daltonmaag_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontbureau_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontscom_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontshop_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontsmith_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_houseind_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_myfonts_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_veer_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_family_is_listed_in_gwf(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_atleast_latin_menu_subsets_exist(): OK
/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_lint/tests/metadata_test.py:141: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
  self.assertTrue(designer in designers,
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_designer_exists_in_profiles_csv(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_items_dicts(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_no_dupes(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_has_unique_style_weight_pairs(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_license(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_no_unknown_top_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_subsets_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_top_keys_types(): OK
bakery_lint.tests.downstream.test_check_files_menu_agreements.CheckFontsMenuAgreements.test_menu_file_agreement(): OK
bakery_lint.tests.downstream.test_check_monospace_agreements.CheckMonospaceAgreement.test_check_monospace_agreement(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_contains_correct_rfn(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_is_consistent_across_family(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_matches_pattern(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_metadata_copyright_size(): OK
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckItalicStyleMatchesMacStyle.test_check_italic_style_matches_names(): FAIL
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckNormalStyleMatchesMacStyle.test_check_normal_style_matches_names(): OK
bakery_lint.tests.downstream.test_check_canonical_styles.CheckCanonicalStyles.test_check_canonical_styles(): OK
bakery_lint.tests.downstream.test_check_familyname_matches_fontnames.CheckFamilyNameMatchesFontNames.test_check_familyname_matches_fontnames(): OK
bakery_lint.tests.downstream.test_metadata_agreements.TestFontOnDiskFamilyEqualToMetadataJSON.test_font_on_disk_family_equal_in_metadata_json(): OK
bakery_lint.tests.downstream.test_metadata_agreements.TestPostScriptNameInMetadataEqualFontOnDisk.test_postscriptname_in_metadata_equal_to_font_on_disk(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_font_name_matches_family(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_family_values_are_all_the_same(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_filename_matches_postscriptname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_font_have_regular(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fonts_fields_have_fontname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_is_equal_to_internal_font_fullname(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_matches_postScriptName(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_400(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_normal(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_copyrighttxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_description_exists(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_fontlogtxt_exists(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_licensetxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_encodings_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_names_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_number_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckCanonicalWeights.test_check_canonical_weights(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckPostScriptNameMatchesWeight.test_postscriptname_contains_correct_weight(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFontWeightSameAsInMetadata.test_font_weight_same_as_in_metadata(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFullNameEqualCanonicalName.test_metadata_contains_current_font(): OK
bakery_lint.tests.downstream.test_check_font_name_not_in_camelcase.CheckFontNameNotInCamelCase.test_fontname_not_in_camel_case(): OK
bakery_lint.tests.downstream.test_check_metadata_fields.CheckMetadataFields.test_check_metadata_fields(): OK
bakery_lint.tests.downstream.test_check_metadata_matches_nametable.CheckMetadataMatchesNameTable.test_check_metadata_matches_nametable(): FAIL
bakery_lint.tests.downstream.test_check_menu_contains_proper_glyphs.CheckMenuSubsetContainsProperGlyphs.test_check_menu_contains_proper_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_subsets_exists.CheckSubsetsExist.test_check_subsets_exists(): FAIL
bakery_lint.tests.downstream.test_check_canonical_filenames.CheckCanonicalFilenames.test_check_canonical_filenames(): OK
{
  "name": "Quantico", 
  "designer": "MADType", 
  "license": "OFL", 
  "visibility": "External", 
  "category": "Sans Serif", 
  "size": 11479, 
  "fonts": [
    {
      "name": "Quantico", 
      "postScriptName": "Quantico-BoldItalic", 
      "fullName": "Quantico-BoldItalic", 
      "style": "italic", 
      "weight": 700, 
      "filename": "Quantico-BoldItalic-TTF.ttf", 
      "copyright": "Copyright (c) 2011 Matthew Desmond (http://www.madtype.com | mattdesmond@gmail.com), with Reserved Font Name \"Quantico\""
    }, 
    {
      "name": "Quantico", 
      "postScriptName": "Quantico-BoldItalic", 
      "fullName": "Quantico-BoldItalic", 
      "style": "italic", 
      "weight": 700, 
      "filename": "Quantico-BoldItalic.ttf", 
      "copyright": "Copyright (c) 2011 Matthew Desmond (http://www.madtype.com | mattdesmond@gmail.com), with Reserved Font Name \"Quantico\""
    }, 
    {
      "name": "Quantico", 
      "postScriptName": "Quantico-Regular", 
      "fullName": "Quantico", 
      "style": "normal", 
      "weight": 400, 
      "filename": "Quantico-Regular-TTF.ttf", 
      "copyright": "Copyright (c) 2011 Matthew Desmond (http://www.madtype.com | mattdesmond@gmail.com), with Reserved Font Name \"Quantico\""
    }, 
    {
      "name": "Quantico", 
      "postScriptName": "Quantico-Bold", 
      "fullName": "Quantico-Bold", 
      "style": "normal", 
      "weight": 700, 
      "filename": "Quantico-Bold.ttf", 
      "copyright": "Copyright (c) 2011 Matthew Desmond (http://www.madtype.com | mattdesmond@gmail.com), with Reserved Font Name \"Quantico\""
    }, 
    {
      "name": "Quantico", 
      "postScriptName": "Quantico-Italic", 
      "fullName": "Quantico-Italic", 
      "style": "italic", 
      "weight": 400, 
      "filename": "Quantico-Italic-TTF.ttf", 
      "copyright": "Copyright (c) 2011 Matthew Desmond (http://www.madtype.com | mattdesmond@gmail.com), with Reserved Font Name \"Quantico\""
    }, 
    {
      "name": "Quantico", 
      "postScriptName": "Quantico-Bold", 
      "fullName": "Quantico-Bold", 
      "style": "normal", 
      "weight": 700, 
      "filename": "Quantico-Bold-TTF.ttf", 
      "copyright": "Copyright (c) 2011 Matthew Desmond (http://www.madtype.com | mattdesmond@gmail.com), with Reserved Font Name \"Quantico\""
    }, 
    {
      "name": "Quantico", 
      "postScriptName": "Quantico-Italic", 
      "fullName": "Quantico-Italic", 
      "style": "italic", 
      "weight": 400, 
      "filename": "Quantico-Italic.ttf", 
      "copyright": "Copyright (c) 2011 Matthew Desmond (http://www.madtype.com | mattdesmond@gmail.com), with Reserved Font Name \"Quantico\""
    }, 
    {
      "name": "Quantico", 
      "postScriptName": "Quantico-Regular", 
      "fullName": "Quantico-Regular", 
      "style": "normal", 
      "weight": 400, 
      "filename": "Quantico-Regular.ttf", 
      "copyright": "Copyright (c) 2011 Matthew Desmond (http://www.madtype.com | mattdesmond@gmail.com), with Reserved Font Name \"Quantico\""
    }
  ], 
  "subsets": [
    "latin", 
    "menu"
  ], 
  "dateAdded": "2011-12-19"
}
